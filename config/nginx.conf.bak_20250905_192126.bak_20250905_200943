# Nginx 生产环境配置文件
# AI智能体驱动交易系统V1.2 - 全局集成测试专用

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # 基础配置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    
    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # 上游服务器配置
<<<<<<< HEAD
    upstream api_forge {
        server api_forge:8000;
    }

    upstream data_spider {
        server data_spider:5000;
    }

    upstream scan_pulse {
        server scan_pulse:8000;
    }

    upstream opti_core {
        server opti_core:8000;
    }

    upstream trade_guard {
        server trade_guard:8000;
    }

    upstream neuro_hub {
        server neuro_hub:8000;
    }

    upstream mms {
        server mms:8000;
    }

    upstream review_guard {
        server review_guard:8000;
    }

    upstream asts_console {
        server asts_console:80;
    }

    upstream ta_core_service {
        server ta_core_service:8000;
    }

    upstream ai_strategy_assistant {
        server ai_strategy_assistant:8000;
    }

    upstream observability_center {
        server observability_center:80;
=======
    upstream api_factory {
        server api-factory:8000;
    }

    upstream asts_console {
        server asts-console:3000;
    }

    upstream info_crawler {
        server info-crawler:5000;
    }

    upstream scanner {
        server scanner:5000;
    }

    upstream strategy_optimizer {
        server strategy-optimizer:5000;
    }

    upstream trade_guard {
        server trade-guard:5000;
    }

    upstream neuro_hub {
        server neuro-hub:5000;
    }

    upstream mms {
        server mms:5000;
    }

    upstream review_guard {
        server review-guard:5000;
    }

    upstream tacore_service {
        server tacore-service:5000;
    }

    upstream ai_strategy_assistant {
        server ai-strategy-assistant:5000;
    }

    upstream observability_center {
        server observability-center:5000;
>>>>>>> 4d5ab11 (chore: init repo (private) [skip ci])
    }

    # 主服务器配置
    server {
        listen 80;
        server_name localhost;

<<<<<<< HEAD
        # API网关路由
        location /api/forge/ {
            proxy_pass http://api_forge/;
=======
        # 健康检查端点
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # 主前端界面 - ASTS Console
        location / {
            proxy_pass http://asts_console;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # API工厂路由
        location /api/factory/ {
            proxy_pass http://api_factory/;
>>>>>>> 4d5ab11 (chore: init repo (private) [skip ci])
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

<<<<<<< HEAD
        location /api/spider/ {
            proxy_pass http://data_spider/;
=======
        # 信息爬虫API路由
        location /api/crawler/ {
            proxy_pass http://info_crawler/;
>>>>>>> 4d5ab11 (chore: init repo (private) [skip ci])
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

<<<<<<< HEAD
        location /api/scan/ {
            proxy_pass http://scan_pulse/;
=======
        # 扫描器API路由
        location /api/scanner/ {
            proxy_pass http://scanner/;
>>>>>>> 4d5ab11 (chore: init repo (private) [skip ci])
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

<<<<<<< HEAD
        location /api/opti/ {
            proxy_pass http://opti_core/;
=======
        # 策略优化API路由
        location /api/optimizer/ {
            proxy_pass http://strategy_optimizer/;
>>>>>>> 4d5ab11 (chore: init repo (private) [skip ci])
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

<<<<<<< HEAD
=======
        # 交易执行API路由
>>>>>>> 4d5ab11 (chore: init repo (private) [skip ci])
        location /api/trade/ {
            proxy_pass http://trade_guard/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

<<<<<<< HEAD
=======
        # 总控模块API路由
>>>>>>> 4d5ab11 (chore: init repo (private) [skip ci])
        location /api/hub/ {
            proxy_pass http://neuro_hub/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

<<<<<<< HEAD
=======
        # MMS API路由
>>>>>>> 4d5ab11 (chore: init repo (private) [skip ci])
        location /api/mms/ {
            proxy_pass http://mms/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

<<<<<<< HEAD
=======
        # 人工审核API路由
>>>>>>> 4d5ab11 (chore: init repo (private) [skip ci])
        location /api/review/ {
            proxy_pass http://review_guard/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

<<<<<<< HEAD
        location /console/ {
            proxy_pass http://asts_console/;
=======
        # TACoreService API路由
        location /api/tacore/ {
            proxy_pass http://tacore_service/;
>>>>>>> 4d5ab11 (chore: init repo (private) [skip ci])
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

<<<<<<< HEAD
        location /api/ta/ {
            proxy_pass http://ta_core_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/ai/ {
=======
        # AI策略助理API路由
        location /api/ai-assistant/ {
>>>>>>> 4d5ab11 (chore: init repo (private) [skip ci])
            proxy_pass http://ai_strategy_assistant/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

<<<<<<< HEAD
        location /observability/ {
=======
        # 可观测性中心API路由
        location /api/observability/ {
>>>>>>> 4d5ab11 (chore: init repo (private) [skip ci])
            proxy_pass http://observability_center/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

<<<<<<< HEAD
        # 默认首页
        location / {
            proxy_pass http://asts_console/;
=======
        # WebSocket支持
        location /ws/ {
            proxy_pass http://api_factory;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }

        # 静态文件缓存
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
        }

        # 安全头
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
    }

    # 监控仪表板服务器配置
    server {
        listen 8080;
        server_name localhost;

        # Prometheus监控
        location /prometheus/ {
            proxy_pass http://observability-center:9090/;
>>>>>>> 4d5ab11 (chore: init repo (private) [skip ci])
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

<<<<<<< HEAD
        # 健康检查
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # SSL配置（生产环境使用）
    # server {
    #     listen 443 ssl http2;
    #     server_name your-domain.com;
    #     
    #     ssl_certificate /etc/ssl/certs/your-cert.pem;
    #     ssl_certificate_key /etc/ssl/private/your-key.pem;
    #     
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     
    #     # 其他配置与HTTP相同
    # }
=======
        # Grafana仪表板
        location /grafana/ {
            proxy_pass http://observability-center:3001/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
>>>>>>> 4d5ab11 (chore: init repo (private) [skip ci])
}