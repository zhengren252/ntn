# Prometheus 生产环境配置
# 用于监控信息源爬虫模组的各项指标

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'ntn-production'
    replica: 'prometheus-1'

# 规则文件
rule_files:
  - "alert_rules.yml"
  - "recording_rules.yml"

# 告警管理器配置
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# 抓取配置
scrape_configs:
  # Prometheus自身监控
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # 信息源爬虫主服务
  - job_name: 'info-crawler'
    static_configs:
      - targets: ['info-crawler-prod:8002']
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: info-crawler-prod:8002

  # Redis监控
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-prod:6379']
    scrape_interval: 30s
    metrics_path: /metrics
    # 使用Redis Exporter
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: redis-exporter:9121

  # Nginx监控
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-prod:8080']
    scrape_interval: 30s
    metrics_path: /nginx_status
    # 使用Nginx Exporter
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: nginx-exporter:9113

  # 系统监控（Node Exporter）
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    metrics_path: /metrics

  # Docker容器监控（cAdvisor）
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    metrics_path: /metrics

  # 应用自定义指标
  - job_name: 'crawler-metrics'
    static_configs:
      - targets: ['info-crawler-prod:5000']
    scrape_interval: 15s
    metrics_path: /api/metrics
    scrape_timeout: 10s
    params:
      format: ['prometheus']
    basic_auth:
      username: 'prometheus'
      password: '${PROMETHEUS_PASSWORD}'

  # ZeroMQ监控
  - job_name: 'zmq-metrics'
    static_configs:
      - targets: ['info-crawler-prod:5000']
    scrape_interval: 30s
    metrics_path: /api/zmq/metrics
    scrape_timeout: 10s

  # 数据库监控
  - job_name: 'database-metrics'
    static_configs:
      - targets: ['info-crawler-prod:5000']
    scrape_interval: 60s
    metrics_path: /api/database/metrics
    scrape_timeout: 15s

  # 爬虫任务监控
  - job_name: 'crawler-tasks'
    static_configs:
      - targets: ['info-crawler-prod:5000']
    scrape_interval: 30s
    metrics_path: /api/crawler/metrics
    scrape_timeout: 10s
    params:
      detailed: ['true']

  # Telegram监控
  - job_name: 'telegram-metrics'
    static_configs:
      - targets: ['info-crawler-prod:5000']
    scrape_interval: 60s
    metrics_path: /api/telegram/metrics
    scrape_timeout: 15s

  # 数据质量监控
  - job_name: 'data-quality'
    static_configs:
      - targets: ['info-crawler-prod:5000']
    scrape_interval: 300s  # 5分钟
    metrics_path: /api/data/quality/metrics
    scrape_timeout: 30s

# 远程写入配置（可选，用于长期存储）
# remote_write:
#   - url: "https://prometheus-remote-write.example.com/api/v1/write"
#     basic_auth:
#       username: "username"
#       password: "password"
#     queue_config:
#       max_samples_per_send: 1000
#       max_shards: 200
#       capacity: 2500

# 远程读取配置（可选）
# remote_read:
#   - url: "https://prometheus-remote-read.example.com/api/v1/read"
#     basic_auth:
#       username: "username"
#       password: "password"

# 存储配置
storage:
  tsdb:
    path: /prometheus
    retention.time: 15d
    retention.size: 10GB
    wal-compression: true

# Web配置
web:
  console.libraries: /etc/prometheus/console_libraries
  console.templates: /etc/prometheus/consoles
  enable-lifecycle: true
  enable-admin-api: true
  max-connections: 512
  read-timeout: 30s
  route-prefix: /
  external-url: http://localhost:9090

# 日志配置
log:
  level: info
  format: logfmt